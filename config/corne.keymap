/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define ALPHA 0
#define SYMBOLS 1
#define NUMBERS 2
#define MISC 3
#define FUNCTIONS 4
#define GAMING 5
#define GAMING_ALT 6

// Helpers
#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
  };

// #define MOD_MORPH(NAME, KEY, MOD_KEY) \
//   mm_##NAME: mm_##NAME { \
//     compatible = "zmk,behavior-mod-morph"; \
//     label = #NAME; \
//     #binding-cells = <0>; \
//     bindings = <&kp KEY>, <&kp MOD_KEY>; \
//     mods = <(MOD_LSFT|MOD_RSFT)>; \
//   };

/ {
  // KEY POSITION REFERENCE
  // ------------------------------------------------------------------------
  // | 00 | 01 | 02 | 03 | 04 | 05 |          | 06 | 07 | 08 | 09 | 10 | 11 |
  // | 12 | 13 | 14 | 15 | 16 | 17 |          | 18 | 19 | 20 | 21 | 22 | 23 |
  // | 24 | 25 | 26 | 27 | 28 | 29 |          | 30 | 31 | 32 | 33 | 34 | 35 |
  //                | 36 | 37 | 38 |          | 39 | 40 | 41 |
  combos {
    compatible = "zmk,combos";
    COMBO(gaming_layer_toggle, &tog GAMING, 36 41)
  };

  keymap {
    compatible = "zmk,keymap";
    alpha_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |        ESC |          Q |          W |          F |          P |          B |    | J          | L          | U          | Y          | ;          | BKSP       |
// |       SHFT |          A |          R |          S |          T |          G |    | M          | N          | E          | I          | O          | «          |
// |       CTRL |          Z |          X |          C |          D |          V |    | K          | H          | ,          | .          | /          | ALT        |
//                                        |        GUI | MISC   TAB | SYMBOL SPC |    | ENTER  NUM | BKSP   FUN | DEL GAMING |
      label = "Alpha";
      bindings = <
    &kp ESC      &kp Q        &kp W        &kp F        &kp P        &kp B             &kp J        &kp L        &kp U        &kp Y        &kp SEMI     &kp BKSP
    &kp LSHFT    &kp A        &kp R        &kp S        &kp T        &kp G             &kp M        &kp N        &kp E        &kp I        &kp O        &kp NUBS
    &kp LCTRL    &kp Z        &kp X        &kp C        &kp D        &kp V             &kp K        &kp H        &kp COMMA    &kp DOT      &kp FSLH     &kp LALT
                                           &kp LGUI     &lt MISC TAB &lt SYMBOLS SPACE &lt NUMBERS ENTER &lt FUNCTIONS BKSP &kp DEL
      >;
    };

    symbols_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |          ' |          < |          > |          " |          ` |    | &          | :          | (          | )          | %          |            |
// |            |          ! |          - |          + |          = |          @ |    | |          | ;          | {          | }          | ?          |            |
// |            |          ^ |          / |          * |          \ |          _ |    | ~          | $          | [          | ]          | #          |            |
//                                        |            |            |            |    |            |            |            |
      label = "Symbols";
      bindings = <
    &none        &kp LS(LT)   &kp BSLH     &kp LS(BSLH) &kp LS(N2)   &kp SQT           &kp LS(N7)   &kp LS(SEMI) &kp LS(N9)   &kp LS(N0)   &kp LS(N5)   &none
    &none        &kp LS(N1)   &kp MINUS    &kp LS(EQUAL)&kp EQUAL    &kp RA(N2)        &kp LS(GRAVE)&kp SEMI     &kp RA(SQT)  &kp RA(BSLH) &kp LS(N6)   &none
    &none        &kp LBKT     &kp LS(N3)   &kp LS(N8)   &kp RA(GRAVE)&kp LS(MINUS)     &kp RA(SEMI) &kp LS(N4)   &kp RA(LBKT) &kp RA(RBKT) &kp GRAVE    &none
                                           &none        &none        &none             &none        &none        &none
      >;
    };

    numbers_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------
// |          |          |        7 |        8 |        9 |          |    |          |          |          |          |          |          |
// |          |          |        4 |        5 |        6 |          |    |          |          | CTRL     | ALT      |          |          |
// |          |          |        1 |        2 |        3 |          |    |          |          |          |          |          |          |
//                                  |          |        0 |        . |    |          |          |          |
      label = "Numbers";
      bindings = <
    &none      &none      &kp N7     &kp N8     &kp N9     &none           &none      &none      &none      &none      &none      &none
    &none      &none      &kp N4     &kp N5     &kp N6     &none           &none      &none      &kp LCTRL  &kp LALT   &none      &none
    &none      &none      &kp N1     &kp N2     &kp N3     &none           &none      &none      &none      &none      &none      &none
                                     &none      &kp N0     &kp DOT         &none      &none      &none
      >;
    };

    miscellaneous_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------
// | VCC      |          |          |          |          |          |    |          | é        | `        | ¸        | ^        |          |
// |          |          | ALT      | CTRL     | SHFT     |          |    |          | LEFT     | DOWN     | UP       | RIGHT    |          |
// |          |          |          |          |          |          |    |          |          |          |          |          |          |
//                                  |          |          |          |    |          |          |          |
      label = "Misc";
      bindings = <
    &ext_power EP_ON&none &none      &none      &none      &none           &none      &kp FSLH   &kp GRAVE  &kp SQT    &kp LBKT   &none
    &none      &none      &kp LALT   &kp LCTRL  &kp LSHFT  &none           &none      &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
    &none      &none      &none      &none      &none      &none           &none      &none      &none      &none      &none      &none
                                     &none      &none      &none           &none      &none      &none
      >;
    };
    
    functions_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------
// |          |      F12 |       F7 |       F8 |       F9 |          |    |          |          |          |          |          |          |
// |          |      F11 |       F4 |       F5 |       F6 |          |    |          |          |          |          |          |          |
// |          |      F10 |       F1 |       F2 |       F3 |          |    |          |          |          |          |          |          |
//                                  |      F15 |      F14 |      F13 |    |          |          |          |
      label = "Fn";
      bindings = <
    &none      &kp F12    &kp F7     &kp F8     &kp F9     &none           &none      &none      &none      &none      &none      &none
    &none      &kp F11    &kp F4     &kp F5     &kp F6     &none           &none      &none      &none      &none      &none      &none
    &none      &kp F10    &kp F1     &kp F2     &kp F3     &none           &none      &none      &none      &none      &none      &none
                                     &kp F15    &kp F14    &kp F13         &none      &none      &none
      >;
    };
    
    gaming_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------
// |      ESC |      TAB |        Q |        W |        E |        R |    |          |          |          |          |          |          |
// |          |     SHFT |        A |        S |        D |        F |    |          | LEFT     | DOWN     | UP       | RIGHT    |          |
// |      GUI |     CTRL |        Z |        X |        C |        V |    |          |          |          |          |          |          |
//                                  |    ENTER |      ALT |    SPACE |    |          |          |   GAMING |
      label = "Gaming";
      bindings = <
    &kp ESC    &kp TAB    &kp Q      &kp W      &kp E      &kp R           &none      &none      &none      &none      &none      &none
    &none      &kp LSHFT  &kp A      &kp S      &kp D      &kp F           &none      &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
    &kp LGU    &kp LCTRL  &kp Z      &kp X      &kp C      &kp V           &none      &none      &none      &none      &none      &none
                                     &kp ENTER  &lt GAMING_ALT LALT &kp SPACE &none   &none      &none
      >;
    };

    gaming_layer_2 {
// ------------------------------------------------------------------------------------------------------------------------------------------
// |        3 |        4 |          |          |          |        T |    |          |          |          |          |          |          |
// |        2 |          |          |          |          |        G |    |          |          |          |          |          |          |
// |        1 |          |          |          |          |        B |    |          |          |          |          |          |          |
//                                  |          |          |          |    |          |          |   GAMING |
      label = "Alt";
      bindings = <
    &kp N3     &kp N4     &trans     &trans     &trans     &kp T           &trans     &trans     &trans     &trans     &trans     &trans
    &kp N2     &trans     &trans     &trans     &trans     &kp G           &trans     &trans     &trans     &trans     &trans     &trans
    &kp N1     &trans     &trans     &trans     &trans     &kp B           &trans     &trans     &trans     &trans     &trans     &trans
                                     &trans     &trans     &trans          &trans     &trans     &trans
      >;
    };
  };
};
